server.port=8082
server.servlet.context-path=/

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/scott?useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

mybatis.type-aliases-package=com.aaa.yk.springcloud.model
mybatis.mapper-locations=classpath:mapper/*Mapper.xml

#配置provider对应的eureka的application值，除了负载均衡外，不能重复
spring.application.name=book-interface

#配置eureka的注册中心地址（方便于自己向eureka中去注册）
#在consumer中有一个restTemplate（模拟http协议）----->http://localhost:8083/all
#之后就不会再使用真实地址来调用
#eureka.client.service-url.defaultZone=http://localhost:6081/eureka

eureka.client.service-url.defaultZone=http://eureka01:6081/eureka,http://eureka02:6082/eureka,http://eureka03:6083/eureka


#配置eureka的实例id（和数据库中的主键一样，在同一个集群eureka中是绝对不允许重复的）
eureka.instance.instance-id=book-instance-8082

#实际开发中的细节
#配置当鼠标悬浮到一个provider的时候，显示的不是localhost，直接显示ip地址
eureka.instance.prefer-ip-address=true

# 这个时候发现了其实eureka所显示的provider都是一个a标签，但是点进去之后会报错404(这个时候也是springcloud所给程序员提供的一种便利)
# 当点击a标签的时候，显示的就是provider的开发者，公司名称，provider所提供的功能，provider下所有controller以及调用方法
# info开头--->剩下的信息你可以随意去编写
# 如果想要让以下信息生效，就必须要添加jar包(必须要添加actuator的jar包)
info.author.name=yk
info.company.name=AAA SoftWare EDU
info.project.description=Test Book Demo

#失效的eureka的自我保护机制
#配置自己向eureka去发送心跳时间（单位是秒）
eureka.instance.lease-renewal-interval-in-seconds=5

#配置在eureka最后一次接收心跳往后数几秒进行剔除
eureka.instance.lease-expiration-duration-in-seconds=8
